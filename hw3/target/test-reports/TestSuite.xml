<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="cmpsci220" name="TestSuite" tests="1" errors="1" failures="0" time="-0.001">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/i386"/><property name="java.vm.version" value="25.66-b17"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) Client VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/student/hw3"/><property name="java.runtime.version" value="1.8.0_66-b17"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="i386"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/i386:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot Client Compiler"/><property name="os.version" value="3.13.0-76-generic"/><property name="user.home" value="/home/student"/><property name="user.timezone" value="America/New_York"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar"/><property name="user.name" value="student"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="32"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_66"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="TestSuite" name="(It is not a test)" time="-0.001">
                                                 <error message="Java heap space" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: Java heap space
	at scala.collection.immutable.VectorPointer$class.copyOf(Vector.scala:956)
	at scala.collection.immutable.Vector.copyOf(Vector.scala:62)
	at scala.collection.immutable.VectorPointer$class.gotoPosWritable1(Vector.scala:1055)
	at scala.collection.immutable.Vector.gotoPosWritable1(Vector.scala:62)
	at scala.collection.immutable.Vector.gotoPosWritable(Vector.scala:260)
	at scala.collection.immutable.Vector.appendBack(Vector.scala:380)
	at scala.collection.immutable.Vector.$colon$plus(Vector.scala:153)
	at com.github.tototoshi.csv.CSVParser$.parse(CSVParser.scala:162)
	at com.github.tototoshi.csv.CSVParser.parseLine(CSVParser.scala:301)
	at com.github.tototoshi.csv.CSVReader.parseNext$1(CSVReader.scala:42)
	at com.github.tototoshi.csv.CSVReader.readNext(CSVReader.scala:51)
	at com.github.tototoshi.csv.CSVReader$$anonfun$toStream$1.apply(CSVReader.scala:88)
	at com.github.tototoshi.csv.CSVReader$$anonfun$toStream$1.apply(CSVReader.scala:88)
	at scala.collection.immutable.Stream$.continually(Stream.scala:1279)
	at scala.collection.immutable.Stream$$anonfun$continually$1.apply(Stream.scala:1279)
	at scala.collection.immutable.Stream$$anonfun$continually$1.apply(Stream.scala:1279)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223)
	at scala.collection.immutable.Stream$$anonfun$takeWhile$1.apply(Stream.scala:941)
	at scala.collection.immutable.Stream$$anonfun$takeWhile$1.apply(Stream.scala:941)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223)
	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418)
	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223)
	at scala.collection.generic.Growable$class.loop$1(Growable.scala:54)
	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:57)
	at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:183)
	at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45)
	at scala.collection.TraversableLike$class.to(TraversableLike.scala:635)
	at scala.collection.AbstractTraversable.to(Traversable.scala:104)
</error>
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>